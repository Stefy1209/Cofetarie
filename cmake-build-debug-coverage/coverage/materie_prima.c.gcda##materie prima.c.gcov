        -:    0:Source:/home/stefy0-0/CLionProjects/OOP/cofetarie/materie prima.c
        -:    0:Graph:/home/stefy0-0/CLionProjects/OOP/cofetarie/cmake-build-debug-coverage/CMakeFiles/cofetarie.dir/materie_prima.c.gcno
        -:    0:Data:/home/stefy0-0/CLionProjects/OOP/cofetarie/cmake-build-debug-coverage/CMakeFiles/cofetarie.dir/materie_prima.c.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by stefy0-0 on 10.03.2024.
        -:    3://
        -:    4:
        -:    5:#include "materie prima.h"
        -:    6:#include <stdlib.h>
        -:    7:#include <string.h>
        -:    8:#include <stddef.h>
        -:    9:
function new_materie_prima called 46 returned 100% blocks executed 100%
       46:   10:materie_prima *new_materie_prima (char *name, char *producer, unsigned long quantity)
        -:   11:/// creates a new 'materie_prima'
        -:   12:/// \param name - char *
        -:   13:/// \param producer - char *
        -:   14:/// \param quantity - unsigned long
        -:   15:/// \return pointer to 'materie_prima'
        -:   16:{
        -:   17:    materie_prima *m;
       46:   18:    m = malloc(sizeof( materie_prima ));
        -:   19:
        -:   20:    //if(m == NULL) {
        -:   21:      //  return NULL;
        -:   22:    //}
        -:   23:
       46:   24:    m->name = malloc((strlen(name) + 1) * sizeof(char));
       46:   25:    strcpy(m->name, name);
        -:   26:
       46:   27:    m->producer = malloc((strlen(producer) + 1) * sizeof(char));
       46:   28:    strcpy(m->producer, producer);
        -:   29:
       46:   30:    m->quantity = quantity;
        -:   31:
       46:   32:    return m;
       46:   32-block  0
        -:   33:}
        -:   34:
function destroy_materie_prima called 46 returned 100% blocks executed 100%
       46:   35:void destroy_materie_prima(materie_prima *m)
        -:   36:/// frees memory used by m
        -:   37:/// \param m - materie_prima
        -:   38:{
       46:   39:    free(m->name);
       46:   40:    free(m->producer);
       46:   41:    free(m);
       46:   42:}
        -:   43:
function get_name called 31 returned 100% blocks executed 100%
       31:   44:char *get_name(materie_prima *m)
        -:   45:/// gets the name of m
        -:   46:/// \param m - materie_prima
        -:   47:/// \return char *
        -:   48:{
       31:   49:    return m->name;
       31:   49-block  0
        -:   50:}
        -:   51:
function get_producer called 3 returned 100% blocks executed 100%
        3:   52:char *get_producer(materie_prima *m)
        -:   53:/// gets the producer of m
        -:   54:/// \param m - materie_prima
        -:   55:/// \return char *
        -:   56:{
        3:   57:    return m->producer;
        3:   57-block  0
        -:   58:}
        -:   59:
function get_quantity called 18 returned 100% blocks executed 100%
       18:   60:unsigned long get_quantity(materie_prima *m)
        -:   61:/// gets the quantity of m
        -:   62:/// \param m - materie_prima
        -:   63:/// \return unsigned long
        -:   64:{
       18:   65:    return m->quantity;
       18:   65-block  0
        -:   66:}
        -:   67:
function set_producer called 2 returned 100% blocks executed 100%
        2:   68:void set_producer(materie_prima *m, char *new_producer)
        -:   69:/// changes the producer of m
        -:   70:/// \param m - materie_prima
        -:   71:/// \param new_producer - char *
        -:   72:{
        2:   73:    free(m->producer);
        2:   74:    m->producer = malloc((strlen(new_producer) + 1) * sizeof(char));
        2:   75:    strcpy(m->producer, new_producer);
        2:   76:}
        -:   77:
function set_quantity called 2 returned 100% blocks executed 100%
        2:   78:void set_quantity(materie_prima *m, unsigned long new_quantity)
        -:   79:/// changes the quantity of m
        -:   80:/// \param m - materie_prima
        -:   81:/// \param new_quantity - unsigned long
        -:   82:{
        2:   83:    m->quantity = new_quantity;
        2:   84:}
